{"ast":null,"code":"var _jsxFileName = \"/Users/aileen/Desktop/docker-test/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [param, setParam] = useState('');\n  const [text, setText] = useState([{\n    input: \"hello world\"\n  }]);\n\n  const Handler = () => {\n    fetch(`http://localhost:5000/${param}`).then(response => {\n      console.log(\"response: \" + response);\n      return response.json();\n    }).then(data => setText(data)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: text && text.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ('test: ', item.input.id)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Input\",\n      onChange: e => setParam(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => Handler(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"zC0IeUX3li+gZnY3y06dQQ5wjPY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aileen/Desktop/docker-test/frontend/src/App.js"],"names":["useState","TextField","Button","App","param","setParam","text","setText","input","Handler","fetch","then","response","console","log","json","data","catch","err","map","item","index","id","e","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAD,CAAhC;;AAEA,QAAMC,OAAO,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAE,yBAAwBN,KAAM,EAAhC,CAAL,CACCO,IADD,CACMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,QAA3B;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,KAJD,EAKCJ,IALD,CAKMK,IAAI,IAAIT,OAAO,CAACS,IAAD,CALrB,EAMCC,KAND,CAMOC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CANd;AAOD,GARD;;AAUA,sBACE;AAAA,4BAEE;AAAA,gBACCZ,IAAI,IAAIA,IAAI,CAACa,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,4BACA;AAAA,qBAAiB,UAAUD,IAAI,CAACZ,KAAL,CAAWc,EAAtC;AAAA,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBADA;AAGD,OAJQ;AADT;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAyB,MAAA,QAAQ,EAAGE,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,MAAMhB,OAAO,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD;;GA9BuBN,G;;KAAAA,G","sourcesContent":["import {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nexport default function App() {\n\n  const [param, setParam] = useState('')\n  const [text, setText] = useState([{input: \"hello world\"}])\n\n  const Handler = () => {\n    fetch(`http://localhost:5000/${param}`)\n    .then(response => {\n      console.log(\"response: \" + response)\n      return response.json()\n    })\n    .then(data => setText(data))\n    .catch(err => console.log(err))\n  }\n\n  return (\n    <>\n      {/* <h1>{text[text.length-1].input}</h1> */}\n      <ul>\n      {text && text.map((item, index) => {\n        return (\n        <li key={index}>{'test: ', item.input.id}</li>\n        )\n      })}\n        </ul>\n     \n      <TextField label=\"Input\" onChange={(e) => setParam(e.target.value)}/>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => Handler()}>Submit</Button>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}